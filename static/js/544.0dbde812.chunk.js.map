{"version":3,"file":"static/js/544.0dbde812.chunk.js","mappings":"8SAKMA,EAAcC,EAAAA,GAAAA,OAAa,CAC/BC,QAAS,kCAGEC,EAAmB,mCAAG,oGACVH,EAAYI,IAAZ,WARD,uBAQwC,CAC5DC,OAAQ,CACNC,QAAS,sCAHoB,cAC3BC,EAD2B,yBAM1BA,EAASC,KAAKC,SANY,2CAAH,qDASnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAAYI,IAAZ,WAhBD,gBAgBwC,CAC5DC,OAAQ,CACNC,QAAS,mCACTM,MAAOD,KAJqB,cAC1BJ,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDAUlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAYI,IAAZ,iBAA0BU,GAAM,CACrDT,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfO,EAAc,mCAAG,WAAMD,GAAN,uFACLd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAAS,sCAHe,cACtBC,EADsB,yBAMrBA,EAASC,KAAKQ,MANO,2CAAH,sDASdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qD,oGC3CjBS,EAAOC,EAAAA,GAAAA,GAAH,4DAKJC,EAAOD,EAAAA,GAAAA,GAAH,oGAQJE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oI,SCUvB,EAtBkB,SAAC,GAAmB,IAAjBI,EAAgB,EAAhBA,UACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EACGA,EAAUG,KAAI,SAAAC,GAAE,OACd,SAACP,EAAD,WACE,SAACC,EAAD,CAAYO,GAAE,kBAAaD,EAAGb,IAAMe,MAAO,CAAEC,KAAMN,GAAnD,SACGG,EAAGI,MAAQJ,EAAGK,SAFRL,EAAGb,GADA,IAOhB,MAGT,C,2HCMD,UApBa,WACX,OAA4BmB,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAqBC,EAAAA,EAAAA,cAAW,iBAAC,qGACdlC,EAAAA,EAAAA,MADc,OAC/BI,EAD+B,OAErC4B,EAAU5B,GAF2B,2CAGpC,IAMH,OAJA+B,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,CAACA,KAGF,UAAC,KAAD,YACE,SAAC,IAAD,8BACCF,GAAS,SAAC,IAAD,CAAWX,UAAWW,IAAa,OAGlD,C,qECtBYK,E,OAAQpB,GAAAA,GAAH,oD","sources":["api/requests.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst popularMovieUrl = 'trending/movie/week';\nconst searchByNameUrl = 'search/movie';\n\nconst fetchMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const searchPopularMovies = async () => {\n  const response = await fetchMovies.get(`/${popularMovieUrl}`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await fetchMovies.get(`/${searchByNameUrl}`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetchMovies.get(`/movie/${id}`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n    },\n  });\n  return response.data;\n};\n\nexport const serchMovieCast = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReview = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n    },\n  });\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  font-size: 18px;\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n\n  &:hover,\n  &:focus {\n    color: rgb(84, 117, 201);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, StyledLink } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movieList\n        ? movieList.map(el => (\n            <Item key={el.id}>\n              <StyledLink to={`/movies/${el.id}`} state={{ from: location }}>\n                {el.name || el.title}\n              </StyledLink>\n            </Item>\n          ))\n        : null}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(PropTypes.shape),\n};\n\nexport default MovieList;\n","import { searchPopularMovies } from 'api/requests';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useState, useEffect, useCallback } from 'react';\nimport { Title } from './Home.styled';\nimport { Container } from 'pages/Layout/Layout.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  const fetchTrendingMovie = useCallback(async () => {\n    const response = await searchPopularMovies();\n    setMovies(response);\n  }, []);\n\n  useEffect(() => {\n    fetchTrendingMovie();\n  }, [fetchTrendingMovie]);\n\n  return (\n    <Container>\n      <Title>Trending today:</Title>\n      {movies ? <MovieList movieList={movies} /> : null}\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: rgb(84, 117, 201);\n`;\n"],"names":["fetchMovies","axios","baseURL","searchPopularMovies","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","serchMovieCast","cast","searchMovieReview","List","styled","Item","StyledLink","Link","movieList","location","useLocation","map","el","to","state","from","name","title","useState","movies","setMovies","fetchTrendingMovie","useCallback","useEffect","Title"],"sourceRoot":""}