{"version":3,"file":"static/js/691.431bb67b.chunk.js","mappings":"8SAKMA,EAAcC,EAAAA,GAAAA,OAAa,CAC/BC,QAAS,kCAGEC,EAAmB,mCAAG,oGACVH,EAAYI,IAAZ,WARD,uBAQwC,CAC5DC,OAAQ,CACNC,QAAS,sCAHoB,cAC3BC,EAD2B,yBAM1BA,EAASC,KAAKC,SANY,2CAAH,qDASnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAAYI,IAAZ,WAhBD,gBAgBwC,CAC5DC,OAAQ,CACNC,QAAS,mCACTM,MAAOD,KAJqB,cAC1BJ,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDAUlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAYI,IAAZ,iBAA0BU,GAAM,CACrDT,OAAQ,CACNC,QAAS,sCAHgB,cACvBC,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfO,EAAc,mCAAG,WAAMD,GAAN,uFACLd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAAS,sCAHe,cACtBC,EADsB,yBAMrBA,EAASC,KAAKQ,MANO,2CAAH,sDASdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qD,oGC3CjBS,EAAOC,EAAAA,GAAAA,GAAH,4DAKJC,EAAOD,EAAAA,GAAAA,GAAH,oGAQJE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oI,SCUvB,EAtBkB,SAAC,GAAmB,IAAjBI,EAAgB,EAAhBA,UACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACP,EAAD,UACGK,EACGA,EAAUG,KAAI,SAAAC,GAAE,OACd,SAACP,EAAD,WACE,SAACC,EAAD,CAAYO,GAAE,kBAAaD,EAAGb,IAAMe,MAAO,CAAEC,KAAMN,GAAnD,SACGG,EAAGI,MAAQJ,EAAGK,SAFRL,EAAGb,GADA,IAOhB,MAGT,C,8JClBYmB,EAAOd,EAAAA,GAAAA,KAAH,sBAEJe,EAAQf,EAAAA,GAAAA,MAAH,oOAYLgB,EAAShB,EAAAA,GAAAA,OAAH,4T,2BCyBnB,EAjCe,WACb,OAAsCiB,EAAAA,EAAAA,UAAS,IAA/C,eAAOzB,EAAP,KAAoB0B,EAApB,KACA,GAAkCD,EAAAA,EAAAA,UAAS,IAA3C,eAAOb,EAAP,KAAkBe,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM7B,EAAQ4B,EAAapC,IAAI,SAEzBsC,GAAaC,EAAAA,EAAAA,cAAW,iBAAC,uFACxB/B,EADwB,kEAINF,EAAAA,EAAAA,IAAmBE,GAJb,OAIvBL,EAJuB,OAK7B+B,EAAa/B,GALgB,2CAM5B,CAACK,IAUJ,OAJAgC,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,CAACA,EAAY9B,KAGd,UAAC,KAAD,YACE,UAACqB,EAAD,CAAMY,SAVW,SAAAC,GACnBA,EAAEC,iBACFN,EAAgB,CAAE7B,MAAOD,GAC1B,EAOG,WACE,SAACuB,EAAD,CAAOc,KAAK,OAAOC,SAAU,SAAAH,GAAC,OAAIT,EAAeS,EAAEI,OAAOC,MAA5B,KAC9B,SAAChB,EAAD,CAAQa,KAAK,SAAb,wBAEF,SAACI,EAAA,EAAD,CAAW7B,UAAWA,MAG3B,C","sources":["api/requests.js","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst popularMovieUrl = 'trending/movie/week';\nconst searchByNameUrl = 'search/movie';\n\nconst fetchMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const searchPopularMovies = async () => {\n  const response = await fetchMovies.get(`/${popularMovieUrl}`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await fetchMovies.get(`/${searchByNameUrl}`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetchMovies.get(`/movie/${id}`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n    },\n  });\n  return response.data;\n};\n\nexport const serchMovieCast = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReview = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: '7cfdacb6fc50ec091436b65cc18a4ccd',\n    },\n  });\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  font-size: 18px;\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n\n  &:hover,\n  &:focus {\n    color: rgb(84, 117, 201);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, StyledLink } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movieList\n        ? movieList.map(el => (\n            <Item key={el.id}>\n              <StyledLink to={`/movies/${el.id}`} state={{ from: location }}>\n                {el.name || el.title}\n              </StyledLink>\n            </Item>\n          ))\n        : null}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(PropTypes.shape),\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form``;\n\nexport const Input = styled.input`\n  min-width: 300px;\n  font-size: 16px;\n  padding: 5px 10px;\n  border: 2px solid #5475c9;\n  border-radius: 5px;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 33px -10px rgba(0, 0, 84, 0.64);\n  }\n`;\n\nexport const Button = styled.button`\n  min-width: 150px;\n  margin-left: 20px;\n  font-size: 16px;\n  padding: 5px 10px;\n  border: 2px solid rgb(84, 117, 201);\n  border-radius: 5px;\n  background-color: rgb(84, 117, 201);\n  color: #fff;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 33px -10px rgba(0, 0, 84, 0.64);\n  }\n`;\n","import { useEffect, useState, useCallback } from 'react';\nimport { searchMoviesByName } from 'api/requests';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Form, Input, Button } from './Movies.styled';\nimport { Container } from 'pages/Layout/Layout.styled';\n\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const fetchMovie = useCallback(async () => {\n    if (!query) {\n      return;\n    }\n    const response = await searchMoviesByName(query);\n    setMovieList(response);\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n  useEffect(() => {\n    fetchMovie();\n  }, [fetchMovie, query]);\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" onChange={e => setSearchQuery(e.target.value)} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <MovieList movieList={movieList} />\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["fetchMovies","axios","baseURL","searchPopularMovies","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","serchMovieCast","cast","searchMovieReview","List","styled","Item","StyledLink","Link","movieList","location","useLocation","map","el","to","state","from","name","title","Form","Input","Button","useState","setSearchQuery","setMovieList","useSearchParams","searchParams","setSearchParams","fetchMovie","useCallback","useEffect","onSubmit","e","preventDefault","type","onChange","target","value","MovieList"],"sourceRoot":""}